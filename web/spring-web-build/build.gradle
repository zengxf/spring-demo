plugins {
    id "java"
    id "application"

    id "org.springframework.boot" version "3.3.3"
    id "io.spring.dependency-management" version "1.1.6"

    id "io.freefair.lombok" version "8.10"

    id "org.beryx.jlink" version "3.0.1"    // jLink
    id "org.graalvm.buildtools.native" version "0.10.2" // Native
}

sourceCompatibility = 17

repositories {
    maven { url "https://maven.aliyun.com/nexus/content/groups/public/" }
    mavenCentral()
}

dependencies {
    // Spring
    implementation group: "org.springframework.boot", name: "spring-boot-starter"
    implementation group: "org.springframework.boot", name: "spring-boot-starter-web"
    implementation group: "org.springframework.boot", name: "spring-boot-starter-logging"

    // Test
    testImplementation group: "org.springframework.boot", name: "spring-boot-starter-test"
    testImplementation group: "org.junit.vintage", name: "junit-vintage-engine" // 兼容 JUnit 4
}

// JUnit 5
test { useJUnitPlatform() }


// 排除指定文件
// gradle -PExcludeFlag=1 build -x test
def excludeFlag = project.hasProperty('ExcludeFlag')
sourceSets {
    main {
        resources {
            if (excludeFlag) {
                // 打包忽略目录: src/main/resources/img
                // exclude 'img/**'
                // 打包忽略文件: src/main/resources/application-pwd.yml
                exclude 'application-pwd.yml'
            }
        }
    }
}


// 测试任务:
// gradle -PExcludeFlag=1 task2
task task1 {
    doLast {
        println 'Executing task1, excludeFlag = ' + excludeFlag
    }
}
task task2(dependsOn: 'task1') {
    doLast {
        println 'Executing task2'
    }
}


// JLink 测试
application {
    // 定义应用程序的主类
    mainModule = "cn.test"
    mainClass = "cn.test.MainApplication"
}

jlink {
    mergedModule {  // 打包某些类失败时，即使不需要下面的配置，也要进行空配置
        requires "org.slf4j"    // does not read module org.slf4j
        requires "java.desktop" // does not read module java.desktop
        requires "java.naming"  // **.merged.module does not read module java.naming
        // requires "org.apache.tomcat.embed.core"      // 二选一，或者没有 Tomcat 类
        // requires "org.apache.tomcat.embed.el"
        // requires "org.apache.tomcat.embed.websocket"
        // requires "cn.test"   // does not read module cn.test (不能这样用，用下面的 JVM 参数)
    }
    launcher {
        name = "spring-web-build"
        jvmArgs = [
                "-Dfile.encoding=UTF-8",
                // 相当于 JVM 参数:
                //   --add-reads spring.web.build.merged.module=cn.test
                "--add-reads", "spring.web.build.merged.module=cn.test",    // does not read module cn.test
                // "--add-reads", "spring.web.build.merged.module=spring.boot"  // web (没必要)
        ]
    }
}